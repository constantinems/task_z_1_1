name: CMakgithub.sha

on:
  push:
    branches:
       - main
       - feature/github_actions

env:
  BUILD_TYPE: Release
  PACKEGE_NAME    : "task_deploy_ver_${{github.sha}}"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    
    - name: Application name
      run:  echo "Packeg name:${{env.PACKEGE_NAME }}"
     
    - name: apt-get lib
      run: sudo apt-get install libgtest-dev && sudo apt-get install cmake
      
    - name: install lib
      run: cd /usr/src/gtest && sudo cmake CMakeLists.txt && sudo make && ls -la && cd lib && ls -la && sudo mkdir /usr/local/lib/gtest && sudo cp *.a /usr/lib
    
    - name: ln
      run:  sudo ln -s /usr/lib/libgtest.a /usr/local/lib/gtest/libgtest.a && sudo ln -s /usr/lib/libgtest_main.a /usr/local/lib/gtest/libgtest_main.a
       
    - name: List current folder on the start
      run:  ls -la
    
    - uses: actions/checkout@v2
      with:
          submodules: true
               
    - run: cmake . -DPATCH_VERSION=${{github.run_number}}
    - run: cmake --build .
    - run: cmake --build . --target test
    - run: cmake --build . --target package
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./helloworld-0.0.${{ github.run_number }}-Linux.deb
          asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package

    - name: List current folder on the end
      run:  ls -la
      
